////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : cnt4b.vf
// /___/   /\     Timestamp : 03/04/2021 03:41:01
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog /home/peter/pd_2/cnt4b.vf -w /home/peter/pd_2/cnt4b.sch
//Design Name: cnt4b
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FTCE_MXILINX_cnt4b(C, 
                          CE, 
                          CLR, 
                          T, 
                          Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module CB4CE_MXILINX_cnt4b(C, 
                           CE, 
                           CLR, 
                           CEO, 
                           Q0, 
                           Q1, 
                           Q2, 
                           Q3, 
                           TC);

    input C;
    input CE;
    input CLR;
   output CEO;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output TC;
   
   wire T2;
   wire T3;
   wire XLXN_1;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire Q2_DUMMY;
   wire Q3_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign Q2 = Q2_DUMMY;
   assign Q3 = Q3_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_0" *) 
   FTCE_MXILINX_cnt4b #( .INIT(1'b0) ) I_Q0 (.C(C), 
                            .CE(CE), 
                            .CLR(CLR), 
                            .T(XLXN_1), 
                            .Q(Q0_DUMMY));
   (* HU_SET = "I_Q1_1" *) 
   FTCE_MXILINX_cnt4b #( .INIT(1'b0) ) I_Q1 (.C(C), 
                            .CE(CE), 
                            .CLR(CLR), 
                            .T(Q0_DUMMY), 
                            .Q(Q1_DUMMY));
   (* HU_SET = "I_Q2_2" *) 
   FTCE_MXILINX_cnt4b #( .INIT(1'b0) ) I_Q2 (.C(C), 
                            .CE(CE), 
                            .CLR(CLR), 
                            .T(T2), 
                            .Q(Q2_DUMMY));
   (* HU_SET = "I_Q3_3" *) 
   FTCE_MXILINX_cnt4b #( .INIT(1'b0) ) I_Q3 (.C(C), 
                            .CE(CE), 
                            .CLR(CLR), 
                            .T(T3), 
                            .Q(Q3_DUMMY));
   AND4  I_36_31 (.I0(Q3_DUMMY), 
                 .I1(Q2_DUMMY), 
                 .I2(Q1_DUMMY), 
                 .I3(Q0_DUMMY), 
                 .O(TC_DUMMY));
   AND3  I_36_32 (.I0(Q2_DUMMY), 
                 .I1(Q1_DUMMY), 
                 .I2(Q0_DUMMY), 
                 .O(T3));
   AND2  I_36_33 (.I0(Q1_DUMMY), 
                 .I1(Q0_DUMMY), 
                 .O(T2));
   VCC  I_36_58 (.P(XLXN_1));
   AND2  I_36_67 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module cnt4b(CE, 
             CLK, 
             CLR, 
             carry, 
             Q0, 
             Q1, 
             Q2, 
             Q3, 
             terminate);

    input CE;
    input CLK;
    input CLR;
   output carry;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output terminate;
   
   
   (* HU_SET = "XLXI_1_4" *) 
   CB4CE_MXILINX_cnt4b  XLXI_1 (.C(CLK), 
                               .CE(CE), 
                               .CLR(CLR), 
                               .CEO(carry), 
                               .Q0(Q0), 
                               .Q1(Q1), 
                               .Q2(Q2), 
                               .Q3(Q3), 
                               .TC(terminate));
endmodule
